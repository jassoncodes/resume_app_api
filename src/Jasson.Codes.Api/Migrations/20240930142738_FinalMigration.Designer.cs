// <auto-generated />
using Jasson.Codes.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace jasson.codes.api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240930142738_FinalMigration")]
    partial class FinalMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Jasson.Codes.Api.Models.Entities.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Lastname")
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("about");
                });

            modelBuilder.Entity("Jasson.Codes.Api.Models.Entities.ActivityExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivityDescription")
                        .HasColumnType("text")
                        .HasColumnName("activity_description");

                    b.Property<string>("ActivityTitle")
                        .HasColumnType("text")
                        .HasColumnName("activity_title");

                    b.Property<int>("ExperienceId")
                        .HasColumnType("integer")
                        .HasColumnName("experience_id");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.ToTable("activity_experience");
                });

            modelBuilder.Entity("Jasson.Codes.Api.Models.Entities.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("GitHub")
                        .HasColumnType("text")
                        .HasColumnName("github");

                    b.Property<string>("LinkedIn")
                        .HasColumnType("text")
                        .HasColumnName("linkedin");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("contact");
                });

            modelBuilder.Entity("Jasson.Codes.Api.Models.Entities.Experience", b =>
                {
                    b.Property<int>("ExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExperienceId"));

                    b.Property<string>("Company")
                        .HasColumnType("text")
                        .HasColumnName("company");

                    b.Property<string>("EndDate")
                        .HasColumnType("text")
                        .HasColumnName("end_date");

                    b.Property<string>("StartDate")
                        .HasColumnType("text")
                        .HasColumnName("start_date");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("ExperienceId");

                    b.ToTable("experience");
                });

            modelBuilder.Entity("Jasson.Codes.Api.Models.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("project_description");

                    b.Property<string>("LiveLink")
                        .HasColumnType("text")
                        .HasColumnName("live_link");

                    b.Property<string>("Repo")
                        .HasColumnType("text")
                        .HasColumnName("repo");

                    b.Property<string>("Stack")
                        .HasColumnType("text")
                        .HasColumnName("stack");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("project_title");

                    b.HasKey("Id");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("Jasson.Codes.Api.Models.Entities.Study", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EndDate")
                        .HasColumnType("text")
                        .HasColumnName("end_date");

                    b.Property<string>("Institution")
                        .HasColumnType("text")
                        .HasColumnName("institution");

                    b.Property<string>("StartDate")
                        .HasColumnType("text")
                        .HasColumnName("start_date");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("studies");
                });

            modelBuilder.Entity("Jasson.Codes.Api.Models.Entities.ActivityExperience", b =>
                {
                    b.HasOne("Jasson.Codes.Api.Models.Entities.Experience", "Experience")
                        .WithMany("Activities")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Experience");
                });

            modelBuilder.Entity("Jasson.Codes.Api.Models.Entities.Experience", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
